# Core System Global Exports Reference

## 🎯 Critical: Use These Exact Names

All Core system modules export to `window` with the `Oslira` prefix. **Never** use the unprefixed versions.

---

## ✅ Infrastructure Layer

| Module | Global Export | Usage |
|--------|--------------|-------|
| EnvDetector | `window.OsliraEnv` | Environment detection, URL builders |
| Logger | `window.OsliraLogger` | Logging with Sentry integration |
| ErrorHandler | `window.OsliraErrorHandler` | Global error handling |
| HttpClient | `window.OsliraHttp` | HTTP requests with retry |
| ConfigProvider | `window.OsliraConfig` | Configuration management |
| Monitoring | `window.OsliraMonitoring` | Performance monitoring |

### Example Usage:
```javascript
// ✅ CORRECT
window.OsliraErrorHandler.handleError(error, { context: 'my-module' });
window.OsliraEnv.getAppUrl('/dashboard');
window.OsliraLogger.info('Message');

// ❌ WRONG
window.ErrorHandler.handleError(error);  // Doesn't exist!
window.Env.getAppUrl('/dashboard');      // Doesn't exist!
```

---

## ✅ Events & State Layer

| Module | Global Export | Usage |
|--------|--------------|-------|
| EventBus | `window.OsliraEventBus` | Pub/sub event system |
| StateManager | `window.OsliraStateManager` | Global state management |
| Store | `window.OsliraStore` | Immutable state store |

### Example Usage:
```javascript
// ✅ CORRECT
window.OsliraEventBus.emit('lead:updated', data);
window.OsliraStateManager.setState('leads', leads);
const leads = window.OsliraStateManager.getState('leads');

// ❌ WRONG
window.EventBus.emit('lead:updated', data);  // Doesn't exist!
window.StateManager.setState('leads', leads); // Doesn't exist!
```

---

## ✅ Auth & Services Layer

| Module | Global Export | Usage |
|--------|--------------|-------|
| AuthManager | `window.OsliraAuth` | Authentication & session |
| UserService | `window.OsliraUserService` | User data operations |
| BusinessService | `window.OsliraBusinessService` | Business data operations |
| LeadService | `window.OsliraLeadService` | Lead data operations |
| AnalyticsService | `window.OsliraAnalyticsService` | Analytics tracking |

### Example Usage:
```javascript
// ✅ CORRECT
const user = window.OsliraAuth.user;
await window.OsliraAuth.signOut();
const business = await window.OsliraBusinessService.getCurrentBusiness();

// ❌ WRONG
const user = window.Auth.user;  // Doesn't exist!
```

---

## ✅ API Layer

| Module | Global Export | Usage |
|--------|--------------|-------|
| ApiClient | `window.OsliraApi` | Main API client |

### Example Usage:
```javascript
// ✅ CORRECT
const data = await window.OsliraApi.get('/endpoint');

// ❌ WRONG
const data = await window.Api.get('/endpoint');  // Doesn't exist!
```

---

## ✅ Utils Layer

| Module | Global Export | Usage |
|--------|--------------|-------|
| NavigationHelper | `window.OsliraNav` | Environment-aware navigation |
| ValidationUtils | `window.OsliraValidation` | Input validation |
| FormatUtils | `window.OsliraFormat` | Data formatting |
| DateUtils | `window.OsliraDate` | Date utilities |
| CryptoUtils | `window.OsliraCrypto` | Cryptography helpers |

### Example Usage:
```javascript
// ✅ CORRECT
window.OsliraNav.navigateTo('dashboard');
const isValid = window.OsliraValidation.isEmail(email);
const formatted = window.OsliraFormat.currency(1234.56);

// ❌ WRONG
window.Nav.navigateTo('dashboard');  // Doesn't exist!
```

---

## 🚨 Common Mistakes & Fixes

### Mistake 1: Using Unprefixed Names
```javascript
// ❌ WRONG
window.EventBus.emit('event');
window.StateManager.getState('key');
window.ErrorHandler.handleError(error);

// ✅ CORRECT
window.OsliraEventBus.emit('event');
window.OsliraStateManager.getState('key');
window.OsliraErrorHandler.handleError(error);
```

### Mistake 2: Assuming Short Aliases Exist
```javascript
// ❌ WRONG
window.Auth.user;
window.Env.isProduction;
window.Logger.info('message');

// ✅ CORRECT
window.OsliraAuth.user;
window.OsliraEnv.isProduction;
window.OsliraLogger.info('message');
```

### Mistake 3: Wrong Capitalization
```javascript
// ❌ WRONG
window.osliraAuth.user;          // Lowercase 'o'
window.OsliraErrorhandler.handle; // Wrong casing

// ✅ CORRECT
window.OsliraAuth.user;           // Capital 'O', capital 'A'
window.OsliraErrorHandler.handle; // Capital 'H'
```

---

## 📋 Quick Validation Checklist

Use this in any new module to verify Core dependencies:

```javascript
// Add this at the start of your module initialization
function validateCoreDependencies() {
    const required = [
        'OsliraEventBus',
        'OsliraStateManager',
        'OsliraErrorHandler',
        'OsliraAuth'
    ];
    
    const missing = required.filter(dep => !window[dep]);
    
    if (missing.length > 0) {
        throw new Error(`Missing Core dependencies: ${missing.join(', ')}`);
    }
    
    console.log('✅ Core dependencies validated');
}
```

---

## 🎯 Dashboard-Specific Exports

Dashboard modules export **WITHOUT** the `Oslira` prefix:

| Module | Global Export |
|--------|--------------|
| LeadManager | `window.LeadManager` |
| BusinessManager | `window.BusinessManager` |
| ModalManager | `window.ModalManager` |
| SidebarManager | `window.SidebarManager` (via `window.sidebarManager` instance) |
| DashboardApp | `window.DashboardApp` |

---

## 💡 Pro Tips

1. **Always use `Oslira` prefix for Core modules**
2. **No prefix for Dashboard-specific modules**
3. **Search & Replace Pattern**: `window.EventBus` → `window.OsliraEventBus`
4. **Validation Pattern**: Add `validateCoreDependencies()` to all modules
5. **Console Check**: Type `window.Oslira` in console and press Tab to see all available exports

---

## 🔍 How to Find Export Names

```javascript
// In browser console, type:
Object.keys(window).filter(key => key.startsWith('Oslira'))

// Returns all Oslira exports like:
// ['OsliraEnv', 'OsliraEventBus', 'OsliraAuth', ...]
```
